name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # TODO(lucacasonato): reenable stable after 1.10 release
        deno: [canary] # [stable, canary]
        os: [macOS-latest, ubuntu-latest, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false

      - name: Install Deno (Unix)
        if: |
          !startsWith(matrix.os, 'windows')
        run: |-
          curl -fsSL https://deno.land/x/install/install.sh | sh
          echo "$HOME/.deno/bin" >> $GITHUB_PATH
      - name: Install Deno (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |-
          curl -fsSL https://deno.land/x/install/install.sh | sh
          echo "$HOME/.deno/bin" >> $env:GITHUB_PATH

      - name: Upgrade to Deno canary
        if: matrix.deno == 'canary'
        run: deno upgrade --canary

      - name: Run tests
        run: deno test --coverage=./cov --unstable --allow-all

      - name: Generate lcov
        if: matrix.deno == 'canary' && !startsWith(matrix.os, 'ubuntu')
        run: deno coverage --unstable --lcov ./cov > cov.lcov

      - name: Upload coverage
        if: matrix.deno == 'canary' && !startsWith(matrix.os, 'ubuntu')
        uses: codecov/codecov-action@v1
        with:
          name: ${{ matrix.os }}-${{ matrix.deno }}
          files: cov.lcov

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false

      - name: Install Deno
        run: |-
          curl -fsSL https://deno.land/x/install/install.sh | sh
          echo "$HOME/.deno/bin" >> $GITHUB_PATH

      - name: Upgrade to Deno canary
        run: deno upgrade --canary

      - name: Format
        run: deno fmt --check

      - name: Lint
        run: deno lint --unstable
